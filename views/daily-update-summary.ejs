<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  </head>
  <body>
<%
const dateIf = (inDate, seperator, order) => {
  let day =''
  if (new Date(inDate).getDate() < 10) {
    day = '0' + new Date(inDate).getDate()
  } else {
    day = new Date(inDate).getDate()
  }
  let month =''
  if (new Date(inDate).getMonth()+1 < 10) {
    month = '0' + (new Date(inDate).getMonth()+1)
  } else {
    month = (new Date(inDate).getMonth()+1)
  }
  let year = new Date(inDate).getFullYear()
  if(order=="f"){
    return(day+seperator+month+seperator+year)
  }
  if(order=="r"){
    return(year+seperator+month+seperator+day)
  }
}
%>
          <%
          let trueTotalSales = 0;
          let trueTotalInts = 0;
          let trueTotalHours =0;
          let trueTotalPay = 0;
          let trueTotalAllo = 0;
          let shifts = ["Day", "Eve"];

          shifts.forEach((shift, index) => { %>
            <table class="table table-sm table-striped table-bordered" id="report_table_<%=shift%>">
              <thead>
                <th style="width:350px;" class="updateTh"><%= shift %> Projects </th>
                <th style="width:85px;" class="updateTh">Hours </th>
                <th style="width:85px;" class="updateTh">Interviews </th>
                <th style="width:85px;" class="updateTh">CPI </th>
                <th style="width:85px;" class="updateTh">Target</th>
                <th style="width:85px;" class="updateTh">AHR</th>
                <th style="width:85px;" class="updateTh">Wages </th>
                <th style="width:85px;" class="updateTh">Sales </th>
                <th style="width:85px;" class="updateTh">Contribution </th>
                <th style="width:95px;" class="updateTh">Cont. To-Date </th>
                <th style="width:85px;" class="updateTh">Deadline </th>
              </thead>
              <tbody>
          <%
          let jobsAdded = []
          let jobCPI = 0
          let jobID = ""
          let isJobDay = 0
          let isJobEve = 0
          let jobName = ""
          let hourlyTarget=0
          let projectID=""
          let quoteNo=""
          let quoteName=""
          let projectTarget=0
          let charge=0
          let totalAbsentAgents=0
          let totalAbsentHours=0
          let totalCoaching=0
          let totalQC=0
          let tot={}
          tot.totals={}
          tot.hourlyTotals={}
          tot.nonHourlyTotals={}
          tot.nonBmgTotals={}
          tot.totals.totalSales=0
          tot.totals.totalPay=0
          tot.totals.totalHours=0
          tot.totals.totalInts=0
          tot.hourlyTotals.totalSales=0
          tot.hourlyTotals.totalPay=0
          tot.hourlyTotals.totalHours=0
          tot.hourlyTotals.totalInts=0
          tot.nonHourlyTotals.totalSales=0
          tot.nonHourlyTotals.totalPay=0
          tot.nonHourlyTotals.totalHours=0
          tot.nonHourlyTotals.totalInts=0
          tot.nonBmgTotals.totalSales=0
          tot.nonBmgTotals.totalPay=0
          tot.nonBmgTotals.totalHours=0
          tot.nonBmgTotals.totalInts=0
             locals["dailys"+shift].forEach((daily, index) => {
              var totType="nonHourlyTotals"
              var job = jobs.find(function(element) {
                return element.jobID == daily.jobID;
              });
              jobCPI = job.jobCPI;
              jobID = job.jobID;
              isJobDay = job.isJobDay;
              isJobEve = job.isJobEve;
              jobName = job.jobName;
              hourlyTarget = job.hourlyTarget;
              projectID = job.projectID;
              var project = projects.find(function(element) {
                return element.projectID == projectID;
              });
              var contTD=projects.filter(el=>el.projectID==projectID).reduce((a,b)=>a+(Number(b.Pay)),0)/projects.filter(el=>el.projectID==projectID).reduce((a,b)=>a+Number((b.isJobHourly==1?b.Hours:b.Ints)*b.jobCPI),0)
              quoteNo=project.quoteNo;
              quoteName=project.quoteName;
              projectTarget=0
              jobs.forEach((jobx, i) => {
                if (jobx.projectID==projectID) {
                  projectTarget=projectTarget+jobx.interviewsTarget;
                }
              });
              if (jobCPI ) {
                jobCPI=jobCPI.toFixed(2)
              }else {
                jobCPI=0
              }
              if (job.isJobHourly==1) {
                charge=daily.Hours
              }else {
                charge=daily.Ints
              }
              if (project.clientID==130) {
                totType="hourlyTotals"
              }
              if (project.projectID!=5667) {
                totType="nonBmgTotals"
              }
              tot[totType].totalSales = tot[totType].totalSales + charge*jobCPI;
              tot[totType].totalPay = tot[totType].totalPay + daily.Pay;
              tot[totType].totalHours = tot[totType].totalHours + daily.Hours;
              tot[totType].totalInts = tot[totType].totalInts + daily.Ints

              tot["totals"].totalSales = tot["totals"].totalSales + charge*jobCPI;
              tot["totals"].totalPay = tot["totals"].totalPay + daily.Pay;
              tot["totals"].totalHours = tot["totals"].totalHours + daily.Hours;
              tot["totals"].totalInts = tot["totals"].totalInts + daily.Ints
              %>
              <tr class="content">
                <td class="normal" style="text-align:left;"> <%= quoteNo %> <%= quoteName %> <%= jobName %> <%if (job.isJobHourly==1) {%>(HOURLY) <%}%></td>
                <td class="normal"><%= daily.Hours.toFixed(2) %> </td>
                <td class="normal"><%= daily.Ints %> </td>
                <td class="normal">£<%= jobCPI %> </td>
                <td class="normal"><%= hourlyTarget?hourlyTarget.toFixed(2):"-" %> </td>
                <td class="normal"><%= daily.Hours?(daily.Ints/daily.Hours).toFixed(2):"-" %> </td>
                <td class="normal">£<%= (daily.Pay).toFixed(2) %> </td>
                <td class="normal">£<%= (charge*jobCPI).toFixed(2) %> </td>
                <td class="normal" <%
                if((shift == "Day" && ((daily.Pay)/(charge*jobCPI))>=0.4) || (shift == "Eve" && ((daily.Pay)/(charge*jobCPI))>=0.35)){%>
                  style="background-color:#ff8a73;"
                <%}
                else{%>
                  style="background-color:#75ff91;"
                <%}%>><%= (((daily.Pay)/(charge*jobCPI))*100).toFixed(2) %>%</td>
                <td class="normal"><%= contTD?(contTD*100).toFixed(2):'Infinity' %>% </td>
                <td class="normal"><%=job.projectID>2? moment(job.endDate).format("DD/MM/YYYY"):'' %> </td>
              </tr>
              <%
              });
         %>
         <tr class="content">
           <th class="updateTh"> Total <%= shift %></th>
           <th class="updateTh"> <%= tot.totals.totalHours.toFixed(2) %> </th>
           <th class="updateTh"> <%= tot.totals.totalInts %> </th>
           <th colspan=3 class="updateTh"> </th>
           <th class="updateTh"> £<%= (tot.totals.totalPay).toFixed(2) %> </th>
           <th class="updateTh"> £<%= tot.totals.totalSales.toFixed(2) %> </th>
           <th class="updateTh"><%= (((tot.totals.totalPay)/(tot.totals.totalSales))*100).toFixed(2) %>%</th>
           <th colspan="2" class="updateTh"> </th>
         </tr>
        <tr class="content subtotal<%= shift %>">
          <th class="subtotalTh"> (excl. Rigour)</th>
          <th class="subtotalTh"> <%= tot.nonHourlyTotals.totalHours.toFixed(2) %> </th>
          <th class="subtotalTh"> <%= tot.nonHourlyTotals.totalInts %> </th>
          <th colspan=3 class="subtotalTh"> </th>
          <th class="subtotalTh"> £<%= (tot.nonHourlyTotals.totalPay).toFixed(2) %> </th>
          <th class="subtotalTh"> £<%= tot.nonHourlyTotals.totalSales.toFixed(2) %> </th>
          <th class="subtotalTh"><%= (((tot.nonHourlyTotals.totalPay)/(tot.nonHourlyTotals.totalSales))*100).toFixed(2) %>%</th>
          <th colspan="2" class="subtotalTh"> </th>
        </tr>
        <tr class="content subtotal<%= shift %>">
          <th class="subtotalTh"> (Rigour only)</th>
          <th class="subtotalTh"> <%= tot.hourlyTotals.totalHours.toFixed(2) %> </th>
          <th class="subtotalTh"> <%= tot.hourlyTotals.totalInts %> </th>
          <th colspan=3 class="subtotalTh"> </th>
          <th class="subtotalTh"> £<%= (tot.hourlyTotals.totalPay).toFixed(2) %> </th>
          <th class="subtotalTh"> £<%= tot.hourlyTotals.totalSales.toFixed(2) %> </th>
          <th class="subtotalTh"><%= (((tot.hourlyTotals.totalPay)/(tot.hourlyTotals.totalSales))*100).toFixed(2) %>%</th>
          <th colspan="2" class="subtotalTh"> </th>
        </tr>
        <tr class="content subtotal<%= shift %>">
          <th class="subtotalTh"> (excl. BMG)</th>
          <th class="subtotalTh"> <%= tot.nonBmgTotals.totalHours.toFixed(2) %> </th>
          <th class="subtotalTh"> <%= tot.nonBmgTotals.totalInts %> </th>
          <th colspan=3 class="subtotalTh"> </th>
          <th class="subtotalTh"> £<%= (tot.nonBmgTotals.totalPay).toFixed(2) %> </th>
          <th class="subtotalTh"> £<%= tot.nonBmgTotals.totalSales.toFixed(2) %> </th>
          <th class="subtotalTh"><%= (((tot.nonBmgTotals.totalPay)/(tot.nonBmgTotals.totalSales))*100).toFixed(2) %>%</th>
          <th colspan="2" class="subtotalTh"> </th>
        </tr>
        </tbody>
      </table>
      <table class="table table-sm table-striped table-bordered absence" id="absence<%=shift%>">
        <thead>
          <th class="updateTh" style="width:195px;;">Absence</th>
          <th class="updateTh" style="width:85px;">Agents</th>
          <th class="updateTh" style="width:85px;">Hours</th>
        </thead>
        <% absences.forEach((absence, i) => {
          if (absence["is"+shift]==1) {
            totalAbsentHours=totalAbsentHours+absence.hoursCount
            totalAbsentAgents=totalAbsentAgents+absence.agentCount
            %>
          <tr class="content"><td class="normal" style="text-align:left;"><%=absence.absenceType%></td><td class="normal"><%=absence.agentCount%></td><td class="normal"><%=absence.hoursCount.toFixed(2)%></td></tr>
        <%}});%>
        <tr class="content"><th class="updateTh">Total</th><th class="updateTh"><%= totalAbsentAgents%></th><th class="updateTh"><%= totalAbsentHours.toFixed(2)%></th></tr>
      </table>
      <table class="table table-sm table-striped table-bordered absence" id="coaching<%=shift%>">
        <thead>
          <th class="updateTh" style="width:195px;;">Coaching</th>
          <th class="updateTh">Total</th>
          <%
          let tls=TeamLeaders.filter(t=>coachings.map(el=>el.managerID && el["is"+shift]==1).includes(t.staffID) || t["is"+shift]==1)
          tls.forEach((tl, i) => { %>
            <th class="updateTh" style="width:85px;"><%=tl.staffName%></th>
            <%})%>
        </thead>
        <%
        coachings.filter(el=>el["is"+shift]==1).map(el=>el.coachingtype).filter((el,i,self)=>el && self.indexOf(el)==i).forEach((coachingType, i) => {
          %>
          <tr class="content"><td class="normal" style="text-align:left;"><%=coachingType %></td>
            <%
            let coaching=coachings.filter(el=>el["is"+shift]==1 && el.coachingtype==coachingType)
            %>
            <td class="normal"><%=(coaching.length>0?coaching.reduce((a,b)=>a+Number(b.coachCount),0):'0')%></td>
            <% tls.forEach((tl, i) => {
              let coaching=coachings.find(el=>el.managerID==tl.staffID && el["is"+shift]==1 && el.coachingtype==coachingType)
              %>
              <td class="normal"><%=(coaching?coaching.coachCount:'0')%></td>
            <%})%>
          </tr>
        <%});%>
        <tr class="content">
          <th class="updateTh">Total</th>
          <%
          let coaching=coachings.filter(el=>el["is"+shift]==1)
          %>
          <th class="updateTh"><%= (coaching.length>0?coaching.reduce((a,b)=>a+Number(b.coachCount),0):0)%></th>
          <% tls.forEach((tl, i) => {
            let coaching=coachings.filter(el=>el.managerID==tl.staffID && el["is"+shift]==1)
            %>
            <th class="updateTh"><%= (coaching.length>0?coaching.reduce((a,b)=>a+Number(b.coachCount),0):0)%></th>
          <%}) %>
          </tr>
      </table>
      <table class="table table-sm table-striped table-bordered absence" id="qc<%=shift%>">
        <thead>
          <th class="updateTh" style="width:195px;;">QC</th>
          <th class="updateTh" style="width:85px;"> </th>
        </thead>
        <% qcs.forEach((qc, i) => {
          if (qc["is"+shift]==1) {
            totalQC=totalQC+qc.qcCount
            %>
          <tr class="content"><td class="normal" style="text-align:left;"><%=qc.type%> monitorings</td><td class="normal"><%=qc.qcCount%></td></tr>
        <%}});%>
        <tr class="content"><th class="updateTh">Total</th><th class="updateTh"><%= totalQC%></th></tr>
      </table>
      <%});%>
</body>
</html>
